#! /usr/bin/env bash

unset ZEEK_DISABLE_ZEEKYGEN;

# If running this from btest, unset any of the environment
# variables that alter default script values.
unset ZEEK_DEFAULT_LISTEN_ADDRESS;
unset ZEEK_DEFAULT_LISTEN_RETRY;
unset ZEEK_DEFAULT_CONNECT_RETRY;

dir="$( cd "$( dirname "$0" )" && pwd )"
source_dir="$( cd $dir/.. && pwd )"
build_dir=$source_dir/build
mkdir -p "$build_dir"
conf_file=$build_dir/zeekygen-test.conf
output_dir=$source_dir/docs
zeek_error_file=$build_dir/zeekygen-test-stderr.txt

function run_zeek
    {
    ZEEK_ALLOW_INIT_ERRORS=1 ZEEKPATH="$source_dir/scripts:$(zeek-config --zeekpath)" zeek -b -X $conf_file zeekygen $1>/dev/null 2>$zeek_error_file

    if [ $? -ne 0 ]; then
        echo "Failed running zeek with zeekygen config file $conf_file"
        echo "See stderr in $zeek_error_file"
        exit 1
    fi
    }

scripts_output_dir=$output_dir/scripts
rm -rf $scripts_output_dir
echo "Generating $scripts_output_dir/"

for namespace in "$(find $source_dir -type d -depth 1)"
do
	for package in "$namespace/*"
	do
        script="$(basename $namespace)/$(basename $package)"
		printf "script\t$script/*\t$scripts_output_dir/" > $conf_file
		run_zeek "$script"
	done
done

script_ref_dir=$output_dir/script-reference
mkdir -p $script_ref_dir

echo ".. toctree::
    :maxdepth: 1

" > "$script_ref_dir/autogenerated-script-index.rst"

cd "$output_dir/scripts"
for f in $(find * -type f)
do
	name="$(echo "$f" | sed -e 's/.rst$//')"
	echo "    $name </scripts/$name>" >> "$script_ref_dir/autogenerated-script-index.rst"
done

printf "=====\nPackage Index\n=====\n" > "$script_ref_dir/autogenerated-package-index.rst"
for f in $(find * -type d)
do
	echo ":doc:\`$f </scripts/$f/index>\`" >> "$script_ref_dir/autogenerated-package-index.rst"
done

cd -

find scripts -name "*.rst" -exec sed -i '' -e 's% </scripts/base% <zeek:scripts/base%g' -e 's% </scripts/policy% <zeek:scripts/policy%g' {} +

echo

rm -f *.log

